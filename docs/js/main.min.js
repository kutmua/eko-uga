"use strict";

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }
document.addEventListener("DOMContentLoaded", function () {
  /* открытие и закрытие бургера */
  var burger = document.querySelector('.header-nav-js');
  var burgerBtn = document.querySelector('.header-burger-js');
  burgerBtn.addEventListener('click', function () {
    this.classList.toggle('is-open');
  });
  function burgerClose() {
    if (burgerBtn.classList.contains('is-open')) {
      burgerBtn.classList.remove('is-open');
      burger.classList.remove('show');
    }
  }
  /* -------------------------------------------- */

  /* плавный скролл */
  function smoothScroll() {
    var anchors = document.querySelectorAll('.anchor-link');
    anchors.forEach(function (anchor) {
      anchor.addEventListener('click', function (event) {
        event.preventDefault();
        var blockID = anchor.getAttribute('href');
        var headerHeight = document.querySelector('.header__nav').offsetHeight;
        var y = document.querySelector('' + blockID).offsetTop - headerHeight;
        window.scrollTo(0, y);
        burgerClose();
      });
    });
  }

  /* -------------------------------------------- */

  /* счетчик скидки */
  var clocks = document.querySelectorAll('.counter-js');
  var deadline = new Date();
  // let yearsDifference = 1;
  // let monthsDifference = 1;
  // let dayDifference = 1;
  var hoursDifference = 1;
  var minutesDifference = 30;

  /* установки для счетчика */
  deadline.setHours(deadline.getHours() + hoursDifference);
  deadline.setMinutes(deadline.getMinutes() + minutesDifference);
  function getTimeRemaining(endtime) {
    var t = Date.parse(endtime) - Date.parse(new Date());
    var seconds = Math.floor(t / 1000 % 60);
    var minutes = Math.floor(t / 1000 / 60 % 60);
    var hours = Math.floor(t / (1000 * 60 * 60) % 24);
    var days = Math.floor(t / (1000 * 60 * 60 * 24));
    return {
      'total': t,
      'days': days,
      'hours': hours,
      'minutes': minutes,
      'seconds': seconds
    };
  }
  function initializeClock(selector, endtime) {
    var daysSpan = selector.querySelector('[data-counter-indicator="day"]');
    var hoursSpan = selector.querySelector('[data-counter-indicator="hour"]');
    var minutesSpan = selector.querySelector('[data-counter-indicator="minutes"]');
    var secondsSpan = selector.querySelector('[data-counter-indicator="seconds"]');
    function updateClock() {
      var t = getTimeRemaining(endtime);
      daysSpan.innerHTML = t.days;
      hoursSpan.innerHTML = t.hours;
      minutesSpan.innerHTML = t.minutes;
      secondsSpan.innerHTML = t.seconds;
      if (t.total <= 0) {
        clearInterval(timeinterval);
      }
    }
    updateClock();
    var timeinterval = setInterval(updateClock, 1000);
  }
  clocks.forEach(function (clock) {
    initializeClock(clock, deadline);
  });

  /* -------------------------------------------- */

  /* открытие селекта */
  var formSelect = document.querySelectorAll('._form__select');
  formSelect.forEach(function (select) {
    select.addEventListener('click', function () {
      select.classList.toggle('open');
    });
  });
  document.addEventListener('click', function (event) {
    if (!event.target.classList.contains('_form__select')) {
      formSelect.forEach(function (select) {
        if (select.classList.contains('open')) {
          select.classList.remove('open');
        }
      });
    }
  });

  /* -------------------------------------------- */

  /* ЗАПУСК ФУНКЦИЙ */
  smoothScroll();
  window.addEventListener('resize', smoothScroll);

  /* -------------------------------------------- */

  /* ИНИЦИАЛИЗАЦИЯ БИБЛИОТЕК */
  /* typed */
  var typed = new Typed('#typed', {
    stringsElement: '#typed-strings',
    typeSpeed: 150,
    backSpeed: 100,
    loop: true,
    loopCount: Infinity
  });

  /* reviews-swiper */
  var swiper = new Swiper('.reviews-swiper', {
    direction: 'horizontal',
    pagination: {
      el: '.reviews-swiper-pagination',
      clickable: true
    },
    navigation: {
      nextEl: '.reviews-swiper-btn-next',
      prevEl: '.reviews-swiper-btn-prev'
    }
  });

  /* iunput-mask, just-validate */
  var inputMask = new Inputmask('+7 (999) 999-99-99');
  var forms = document.querySelectorAll('.validate-form-js');
  forms.forEach(function (form) {
    // iunput-mask
    var inputTel = form.querySelector('input[type="tel"]');
    inputMask.mask(inputTel);

    /* --------- */

    // just-validate
    var validation = new JustValidate(form, {
      errorFieldCssClass: 'is-invalid'
    });
    var requestModal = new bootstrap.Modal('#requestModal', {
      keyboard: true
    });
    validation.addField('.validate-form-phone-js', [{
      validator: function validator(value) {
        var phone = inputMask.unmaskedvalue(value);
        if (phone.length === 10) {
          return true;
        } else return false;
      },
      errorMessage: 'Введите номер телефона'
    }, {
      rule: 'required',
      errorMessage: 'Обязательное поле'
    }])
    // TODO: переделать закрытие окна после прохождения валидации
    .onSuccess(function (event) {
      var _console;
      // const gratitudeModal = new bootstrap.Modal('#gratitudeModal', {
      //   keyboard: true
      // })
      // const requestModal = new bootstrap.Modal('#requestModal', {
      //   keyboard: true
      // });

      // requestModal.hide()

      // gratitudeModal.show(event.submitter);
      // gratitudeModal.show();

      var formData = new FormData(event.target);
      (_console = console).log.apply(_console, _toConsumableArray(formData));
      var xhr = new XMLHttpRequest();
      xhr.onreadystatechange = function () {
        if (xhr.readyState === 4) {
          if (xhr.status === 200) {
            requestModal.hide();
            var gratitudeModal = new bootstrap.Modal('#gratitudeModal', {
              keyboard: true
            });
            gratitudeModal.show();
            console.log('Отправлено');
          }
        }
      };
      xhr.open('POST', 'mail.php', true);
      xhr.send(formData);
      event.target.reset();
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,

"use strict";

document.addEventListener("DOMContentLoaded", function () {
  /* открытие и закрытие бургера */
  var burger = document.querySelector('.header-nav-js');
  var burgerBtn = document.querySelector('.header-burger-js');
  burgerBtn.addEventListener('click', function () {
    this.classList.toggle('is-open');
  });
  function burgerClose() {
    if (burgerBtn.classList.contains('is-open')) {
      burgerBtn.classList.remove('is-open');
      burger.classList.remove('show');
    }
  }
  /* -------------------------------------------- */

  /* плавный скролл */
  function smoothScroll() {
    var anchors = document.querySelectorAll('.anchor-link');
    anchors.forEach(function (anchor) {
      anchor.addEventListener('click', function (event) {
        event.preventDefault();
        var blockID = anchor.getAttribute('href');
        var headerHeight = document.querySelector('.header__nav').offsetHeight;
        var y = document.querySelector('' + blockID).offsetTop - headerHeight;
        window.scrollTo(0, y);
        burgerClose();
      });
    });
  }

  /* -------------------------------------------- */

  /* кнопка "показать еще" */
  var portfolioArray = Array.from(document.querySelector('.portfolio-container-js').children);
  var showMoreBtn = document.querySelector('.show-more-btn-js');
  var caseLength = document.querySelectorAll('.portfolio__case').length;
  var items = 8;
  showMoreBtn.addEventListener('click', function () {
    items += 2;
    var visibleItems = portfolioArray.slice(0, items);
    visibleItems.forEach(function (el) {
      el.classList.add('show');
    });
    if (visibleItems.length === caseLength) {
      showMoreBtn.style.display = 'none';
    }
  });

  /* -------------------------------------------- */

  /* счетчик скидки */
  var clocks = document.querySelectorAll('.counter-js');
  var deadline = new Date();
  // let yearsDifference = 1;
  // let monthsDifference = 1;
  // let dayDifference = 1;
  var hoursDifference = 1;
  var minutesDifference = 30;

  /* установки для счетчика */
  deadline.setHours(deadline.getHours() + hoursDifference);
  deadline.setMinutes(deadline.getMinutes() + minutesDifference);
  function getTimeRemaining(endtime) {
    var t = Date.parse(endtime) - Date.parse(new Date());
    var seconds = Math.floor(t / 1000 % 60);
    var minutes = Math.floor(t / 1000 / 60 % 60);
    var hours = Math.floor(t / (1000 * 60 * 60) % 24);
    var days = Math.floor(t / (1000 * 60 * 60 * 24));
    return {
      'total': t,
      'days': days,
      'hours': hours,
      'minutes': minutes,
      'seconds': seconds
    };
  }
  function initializeClock(selector, endtime) {
    var daysSpan = selector.querySelector('[data-counter-indicator="day"]');
    var hoursSpan = selector.querySelector('[data-counter-indicator="hour"]');
    var minutesSpan = selector.querySelector('[data-counter-indicator="minutes"]');
    var secondsSpan = selector.querySelector('[data-counter-indicator="seconds"]');
    function updateClock() {
      var t = getTimeRemaining(endtime);
      daysSpan.innerHTML = t.days;
      hoursSpan.innerHTML = t.hours;
      minutesSpan.innerHTML = t.minutes;
      secondsSpan.innerHTML = t.seconds;
      if (t.total <= 0) {
        clearInterval(timeinterval);
      }
    }
    updateClock();
    var timeinterval = setInterval(updateClock, 1000);
  }
  clocks.forEach(function (clock) {
    initializeClock(clock, deadline);
  });

  /* -------------------------------------------- */

  /* открытие селекта */
  var formSelect = document.querySelectorAll('._form__select');
  formSelect.forEach(function (select) {
    select.addEventListener('click', function () {
      select.classList.toggle('open');
    });
  });
  document.addEventListener('click', function (event) {
    if (!event.target.classList.contains('_form__select')) {
      formSelect.forEach(function (select) {
        if (select.classList.contains('open')) {
          select.classList.remove('open');
        }
      });
    }
  });

  /* -------------------------------------------- */

  /* слайдер ДО и ПОСЛЕ (оставить только для GitHub) */
  var slider = document.querySelector('.contrast-slider-js');
  var before = document.querySelector('.before');
  var beforeImage = before.querySelector('img');
  var change = document.querySelector('.change');
  var body = document.body;
  var isActive = false;
  var width = slider.offsetWidth;
  beforeImage.style.width = "".concat(width, "px");
  change.addEventListener('mousedown', function () {
    isActive = true;
  });
  body.addEventListener('mouseup', function () {
    isActive = false;
  });
  body.addEventListener('mouseleave', function () {
    isActive = false;
  });
  var beforeAfterSlider = function beforeAfterSlider(x) {
    var shift = Math.max(0, Math.min(x, slider.offsetWidth));
    before.style.width = "".concat(shift, "px");
    change.style.left = "".concat(shift, "px");
  };
  var pauseEvents = function pauseEvents(e) {
    e.stopPropagation();
    e.preventDefault();
    return false;
  };
  body.addEventListener('mousemove', function (e) {
    if (!isActive) {
      return;
    }
    var x = e.pageX;
    x -= slider.getBoundingClientRect().left;
    beforeAfterSlider(x);
    pauseEvents(e);
  });
  change.addEventListener('touchstart', function () {
    isActive = true;
  });
  body.addEventListener('touchend', function () {
    isActive = false;
  });
  body.addEventListener('touchcancel', function () {
    isActive = false;
  });
  body.addEventListener('touchmove', function (e) {
    if (!isActive) {
      return;
    }
    var x;
    var i;
    for (i = 0; i < e.changedTouches.length; i++) {
      x = e.changedTouches[i].pageX;
    }
    x -= slider.getBoundingClientRect().left;
    beforeAfterSlider(x);
    pauseEvents(e);
  });

  /* -------------------------------------------- */

  /* ЗАПУСК ФУНКЦИЙ */
  smoothScroll();
  window.addEventListener('resize', smoothScroll);

  /* -------------------------------------------- */

  /* ИНИЦИАЛИЗАЦИЯ БИБЛИОТЕК */
  /* typed */
  var typed = new Typed('#typed', {
    stringsElement: '#typed-strings',
    typeSpeed: 150,
    backSpeed: 100,
    loop: true,
    loopCount: Infinity
  });

  /* reviews-swiper */
  var reviewsSwiper = new Swiper('.reviews-swiper', {
    direction: 'horizontal',
    pagination: {
      el: '.reviews-swiper-pagination',
      clickable: true
    },
    navigation: {
      nextEl: '.reviews-swiper-btn-next',
      prevEl: '.reviews-swiper-btn-prev'
    }
  });

  /* stats-swiper */
  var statsSwiper = new Swiper('.stats__swiper', {
    slidesPerView: 1,
    slidesPerGroup: 1,
    autoplay: {
      delay: 2500,
      disableOnInteraction: false
    },
    pagination: {
      el: ".stats__swiper-pagination",
      renderBullet: function renderBullet(index, className) {
        return '<button class="' + className + ' stats__swiper-btn button stats__swiper-btn-' + (index + 1) + '"></button>';
      },
      clickable: true
    }
  });

  /* city-swiper */
  var citySwiperSmall = new Swiper(".city__swiper-small", {
    spaceBetween: 10,
    slidesPerView: 10,
    freeMode: true,
    watchSlidesProgress: true,
    breakpoints: {
      200: {
        slidesPerView: 4
      },
      360: {
        slidesPerView: 5
      },
      500: {
        slidesPerView: 7
      },
      650: {
        slidesPerView: 8
      },
      770: {
        slidesPerView: 10
      }
    }
  });
  var citySwiperBig = new Swiper(".city__swiper-big", {
    loop: true,
    navigation: {
      nextEl: '.city__swiper-big-btn-next',
      prevEl: '.city__swiper-big-btn-prev'
    },
    thumbs: {
      swiper: citySwiperSmall
    }
  });

  /* iunput-mask, just-validate */
  var inputMask = new Inputmask('+7 (999) 999-99-99');
  var forms = document.querySelectorAll('.validate-form-js');
  var requestModal = new bootstrap.Modal('#requestModal', {
    keyboard: true
  });
  var gratitudeModal = new bootstrap.Modal('#gratitudeModal', {
    keyboard: true
  });
  forms.forEach(function (form) {
    // iunput-mask
    var inputTel = form.querySelector('input[type="tel"]');
    inputMask.mask(inputTel);

    /* --------- */

    // just-validate
    var validation = new JustValidate(form, {
      errorFieldCssClass: 'is-invalid'
    });
    validation.addField('.validate-form-phone-js', [{
      validator: function validator(value) {
        var phone = inputMask.unmaskedvalue(value);
        if (phone.length === 10) {
          return true;
        } else return false;
      },
      errorMessage: 'Введите номер телефона'
    }, {
      rule: 'required',
      errorMessage: 'Обязательное поле'
    }]).onSuccess(function (event) {
      /* блок для эмуляции отправки формы для GitHub pages*/
      var gratitudeModal = new bootstrap.Modal('#gratitudeModal', {
        keyboard: true
      });
      gratitudeModal.show();
      requestModal.hide();
      event.target.reset();
      /* --------------------------------- */

      /* рабочий блок отправки формы на почту для хостинга*/
      // let formData = new FormData(event.target);

      // let xhr = new XMLHttpRequest();

      // xhr.onreadystatechange = function () {
      //   if (xhr.readyState === 4) {
      //     if (xhr.status === 200) {

      //       requestModal.hide();
      //       gratitudeModal.show();
      //       console.log('Отправлено');
      //       event.target.reset();
      //     }
      //   }
      // }

      // xhr.open('POST', 'mail.php', true);
      // xhr.send(formData);
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
